package client;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.Socket;

public class ClientHandler extends Thread{
	final DataInputStream inputD;
	final DataOutputStream outputD;
	final Socket socket;

	public ClientHandler(Socket socket, DataInputStream input, DataOutputStream output) {
		this.socket = socket;
		inputD = input;
		outputD = output;
	}

	@Override
	public void run() {
		String received;
		String toreturn;
		while (true) {
			try {

				// Ask user what he wants
				outputD.writeUTF("What do you want?[Date | Time]..\n" + "Type Exit to terminate connection.");

				// receive the answer from client
				received = inputD.readUTF();

				if (received.equals("Exit")) {
					System.out.println("Client " + this.socket + " sends exit...");
					System.out.println("Closing this connection.");
					this.socket.close();
					System.out.println("Connection closed");
					break;
				}

				// creating Date object
				Date date = new Date();

				// write on output stream based on the
				// answer from the client
				switch (received) {

				case "Date":
					toreturn = fordate.format(date);
					outputD.writeUTF(toreturn);
					break;

				case "Time":
					toreturn = fortime.format(date);
					outputD.writeUTF(toreturn);
					break;

				default:
					outputD.writeUTF("Invalid input");
					break;
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
		}

		try {
			// closing resources
			this.inputD.close();
			this.outputD.close();

		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
